def donuts(count):
  if count < 10:
    return 'Liczba paczkow: ' + str(count)
  else:
    return 'Liczba paczkow: wiele'

def both_ends(s): 
  if len(s) < 2:
    return ''
  a = s[0:2]
  b = s[-2:]
  return a + b

def fix_start(s):
  glowa = s[0]
  ogon = s[1:]
  fixed_ogon = ogon.replace(glowa, '*')
  return glowa + fixed_ogon

def mix_up(a, b):
  a_swapped = b[:2] + a[2:]
  b_swapped = a[:2] + b[2:]
  return a_swapped + ' ' + b_swapped

def test(got, expected):
  if got == expected:
    prefix = ' OK '
  else:
    prefix = '  X '
  print ('%s got: %s expected: %s' % (prefix, repr(got), repr(expected)))

def main():
  print ('donuts')
  test(donuts(4), 'Liczba paczkow: 4')
  test(donuts(9), 'Liczba paczkow: 9')
  test(donuts(10), 'Liczba paczkow: wiele')
  test(donuts(99), 'Liczba paczkow: wiele')

  print()
  print ('both_ends')
  test(both_ends('spring'), 'spng')
  test(both_ends('Hello'), 'Helo')
  test(both_ends('a'), '')
  test(both_ends('xyz'), 'xyyz')

  
  print()
  print ('fix_start')
  test(fix_start('babble'), 'ba**le')
  test(fix_start('aardvark'), 'a*rdv*rk')
  test(fix_start('google'), 'goo*le')
  test(fix_start('donut'), 'donut')

  print()
  print ('mix_up')
  test(mix_up('mix', 'pod'), 'pox mid')
  test(mix_up('dog', 'dinner'), 'dig donner')
  test(mix_up('gnash', 'sport'), 'spash gnort')
  test(mix_up('pezzy', 'firm'), 'fizzy perm')


# Standard boilerplate to call the main() function.
if __name__ == '__main__':
  main()

def verbing(cos):
  if len(cos) >= 3:
    if cos[-3:] != 'ing':
        cos = cos + 'ing'
    else:
        cos = cos + 'ly'
  return cos

def not_bad(cos):
  n = cos.find('not')
  b = cos.find('bad')
  if n != -1 and b != -1 and b > n:
    cos = cos[:n] + 'good' + cos[b+3:]
  return cos

def front_back(a, b):
  a_middle = int(len(a) / 2)
  b_middle = int(len(b) / 2)
  if len(a) % 2 == 1:  
    a_middle = a_middle + 1
  if len(b) % 2 == 1:
    b_middle = b_middle + 1
  return a[:a_middle] + b[:b_middle] + a[a_middle:] + b[b_middle:]

def test(got, expected):
  if got == expected:
    prefix = ' OK '
  else:
    prefix = '  X '
  print ('%s got: %s expected: %s' % (prefix, repr(got), repr(expected)))



def main():
  print ('verbing')
  test(verbing('hail'), 'hailing')
  test(verbing('swiming'), 'swimingly')
  test(verbing('do'), 'do')

  print()
  print ('not_bad')
  test(not_bad('This movie is not so bad'), 'This movie is good')
  test(not_bad('This dinner is not that bad!'), 'This dinner is good!')
  test(not_bad('This tea is not hot'), 'This tea is not hot')
  test(not_bad("It's bad yet not"), "It's bad yet not")

  print()
  print ('front_back')
  test(front_back('abcd', 'xy'), 'abxcdy')
  test(front_back('abcde', 'xyz'), 'abcxydez')
  test(front_back('Kitten', 'Donut'), 'KitDontenut')

if __name__ == '__main__':
  main()
